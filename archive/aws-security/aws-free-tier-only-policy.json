{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "AllowFreeTeamOnly",
      "Effect": "Allow",
      "Action": [
        "ec2:DescribeInstances",
        "ec2:DescribeImages",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "ec2:DescribeVolumes",
        "ec2:DescribeSnapshots",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeAddresses",
        "ec2:DescribeRegions",
        "ec2:DescribeAvailabilityZones",
        "ec2:RunInstances",
        "ec2:StartInstances",
        "ec2:StopInstances",
        "ec2:RebootInstances",
        "ec2:TerminateInstances",
        "ec2:CreateKeyPair",
        "ec2:DeleteKeyPair",
        "ec2:CreateSecurityGroup",
        "ec2:DeleteSecurityGroup",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:CreateTags",
        "ec2:DeleteTags",
        "s3:GetObject",
        "s3:PutObject",
        "s3:DeleteObject",
        "s3:ListBucket",
        "s3:CreateBucket",
        "s3:DeleteBucket",
        "s3:GetBucketLocation",
        "s3:GetBucketVersioning",
        "s3:PutBucketVersioning",
        "s3:GetBucketPolicy",
        "s3:PutBucketPolicy",
        "s3:DeleteBucketPolicy",
        "lambda:CreateFunction",
        "lambda:DeleteFunction",
        "lambda:GetFunction",
        "lambda:InvokeFunction",
        "lambda:ListFunctions",
        "lambda:UpdateFunctionCode",
        "lambda:UpdateFunctionConfiguration",
        "iam:GetRole",
        "iam:CreateRole",
        "iam:AttachRolePolicy",
        "iam:DetachRolePolicy",
        "iam:PassRole",
        "iam:GetUser",
        "iam:ListUsers",
        "iam:GetPolicy",
        "iam:ListPolicies",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:ListMetrics",
        "cloudwatch:PutMetricData",
        "cloudtrail:CreateTrail",
        "cloudtrail:DeleteTrail",
        "cloudtrail:DescribeTrails",
        "cloudtrail:GetTrailStatus",
        "cloudtrail:StartLogging",
        "cloudtrail:StopLogging",
        "config:PutConfigurationRecorder",
        "config:PutDeliveryChannel",
        "config:StartConfigurationRecorder",
        "config:StopConfigurationRecorder",
        "config:DescribeConfigurationRecorders",
        "config:DescribeDeliveryChannels",
        "budgets:ViewBudget",
        "budgets:ModifyBudget",
        "ce:GetCostAndUsage",
        "ce:GetUsageReport"
      ],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "ec2:InstanceType": [
            "t2.micro",
            "t3.micro"
          ]
        }
      }
    },
    {
      "Sid": "AllowGeneralDescribeActions",
      "Effect": "Allow",
      "Action": [
        "ec2:Describe*",
        "rds:Describe*",
        "elasticloadbalancing:Describe*",
        "s3:List*",
        "s3:Get*",
        "lambda:List*",
        "lambda:Get*",
        "iam:List*",
        "iam:Get*",
        "logs:Describe*",
        "cloudwatch:Describe*",
        "cloudwatch:Get*",
        "cloudwatch:List*",
        "cloudtrail:Describe*",
        "cloudtrail:Get*",
        "cloudtrail:List*",
        "config:Describe*",
        "config:Get*",
        "config:List*",
        "budgets:Describe*",
        "ce:Get*",
        "pricing:GetProducts"
      ],
      "Resource": "*"
    },
    {
      "Sid": "DenyExpensiveOperations",
      "Effect": "Deny",
      "Action": [
        "rds:CreateDBInstance",
        "rds:CreateDBCluster",
        "elasticloadbalancing:CreateLoadBalancer",
        "elasticloadbalancing:CreateTargetGroup",
        "ec2:CreateNatGateway",
        "ec2:AllocateAddress",
        "ec2:AssociateAddress",
        "redshift:*",
        "elasticsearch:*",
        "es:*",
        "emr:*",
        "sagemaker:*",
        "databrew:*",
        "glue:*",
        "kinesis:*",
        "firehose:*",
        "dms:*",
        "backup:*",
        "fsx:*",
        "efs:CreateFileSystem",
        "elasticache:*",
        "mq:*",
        "workspaces:*",
        "directconnect:*",
        "globalaccelerator:*",
        "route53resolver:*",
        "networkfirewall:*"
      ],
      "Resource": "*"
    },
    {
      "Sid": "DenyLargeInstanceTypes",
      "Effect": "Deny",
      "Action": [
        "ec2:RunInstances"
      ],
      "Resource": "arn:aws:ec2:*:*:instance/*",
      "Condition": {
        "ForAllValues:StringNotEquals": {
          "ec2:InstanceType": [
            "t2.micro",
            "t3.micro"
          ]
        }
      }
    },
    {
      "Sid": "DenyLargeStorageVolumes",
      "Effect": "Deny",
      "Action": [
        "ec2:CreateVolume",
        "ec2:ModifyVolume"
      ],
      "Resource": "*",
      "Condition": {
        "NumericGreaterThan": {
          "ec2:VolumeSize": "30"
        }
      }
    },
    {
      "Sid": "AllowBillingAndCostManagement",
      "Effect": "Allow",
      "Action": [
        "budgets:*",
        "ce:*",
        "cur:*",
        "aws-portal:ViewBilling",
        "aws-portal:ViewUsage",
        "aws-portal:ViewPaymentMethods",
        "aws-portal:ViewAccount"
      ],
      "Resource": "*"
    }
  ]
}
